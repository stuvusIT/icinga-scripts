#!/usr/bin/env bash

# Checks if the machine needs to be rebooted in order to apply a kernel update.

# Parameters:
# -k - Path of the kernel (defaults to /vmlinuz)

# shellcheck source=common.sh
. "$(dirname "${0}")/common.sh"
checkName=kernel
checkOutput='Kernel is up to date.'

# Parameters
kernel=/vmlinuz

usage() {
	echo "Usage: ${0} -k<kernel>"
	exit 3
}

while getopts ":k:" opt; do
	case "${opt}" in
		k)
			kernel="${OPTARG}"
			;;
		\?)
			echo "Invalid option: -${OPTARG}"
			usage
			;;
		:)
			echo "Option -${OPTARG} requires an argument"
			usage
			;;
	esac
done

if [ -f "${kernel}" ]; then
	infile=''
	inmem="$(uname -r)"
	found=0
	for part in $(file -L "$(readlink -f "${kernel}")"); do
		if [ "${found}" = 1 ]; then
			infile="${part}"
			break
		fi
		[ "${part}" = version ] && found=1
	done

	if [ -n "${infile}" ]; then
		if [ "${infile}" != "${inmem}" ]; then
			checkOutput="Kernel ${infile} is out, time to reboot."
			checkDetails="You are still running version ${inmem}."
			checkState=CRITICAL
		fi
	else
		checkOutput="${kernel} does not have a version."
		checkState=UNKNOWN
	fi
else
	checkOutput="${kernel} not found."
	checkState=WARNING
fi

checkReturn
