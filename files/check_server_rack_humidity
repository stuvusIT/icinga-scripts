#!/usr/bin/env bash

# Checks the temperature in the server rack and outputs the results as perfdata.
#
# Parameters:
# -c - Temperature that is critical (defaults to 40°C)
# -w - Temperature that is warning (defaults to 30°C)
# -h - IP or hostname of server rack monitoring brick
# -u - UID of sensor in server rack

# shellcheck source=common.sh
. "$(dirname "${0}")/common.sh"
checkName=server_rack_humidity

# Parameters
warn=55
crit=60

usage() {
	echo "Usage: ${0} -h <host> -u <uid> -w <warning> -c <critical>"
	exit 3
}

# Parse parameters
while getopts ":w:c:h:u:" opt; do
	case "${opt}" in
		c)
			crit="${OPTARG}"
			;;
		w)
			warn="${OPTARG}"
			;;
		h)
			host="${OPTARG}"
			;;
		u)
			uid="${OPTARG}"
			;;
		\?)
			echo "Invalid option: -${OPTARG}"
			usage
			;;
		:)
			echo "Option -${OPTARG} requires an argument"
			usage
			;;
	esac
done

humidity=$(bc <<< "$($(dirname "${0}")/tinkerforge --host $host call humidity-v2-bricklet $uid get-humidity | cut -d "=" -f 2)/100")
# Format output
if [ "${humidity}" -gt "${crit}" ]; then
	checkState=CRITICAL
elif [ "${humidity}" -gt "${warn}" ]; then
	checkState=WARNING
fi
checkOutput="${humidity}%"

# Format perfdata
checkPerfdata="humidity=${humidity}%;${warn};${crit};0;100"

checkReturn
