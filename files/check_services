#!/usr/bin/env bash

# Checks if any systemd services failed (systemctl --failed).

# Parameters:
# -c - Amount of services that need to be failed in order to return a critical state (defaults to 1)
# -w - Amount of services that need to be failed in order to return a warning state (defaults to 1)

. "$(dirname "${0}")/common.sh"
checkName=services

# Parameters
crit=1
warn=1

usage() {
	echo "Usage: ${0} -w<warning> -c<critical>"
	exit 3
}

while getopts ":w:c:" opt; do
	case "${opt}" in
		w)
			warn="${OPTARG}"
			;;
		c)
			crit="${OPTARG}"
			;;
		\?)
			echo "Invalid option: -${OPTARG}"
			usage
			;;
		:)
			echo "Option -${OPTARG} requires an argument"
			usage
			;;
	esac
done

# Parse systemctl
output="$(systemctl --no-legend --no-pager --state=failed | cut -d' ' -f1)"
if [ -z "${output}" ]; then
	ncrit=0
else
	ncrit="$(echo "${output}" | wc -l)"
fi

# Parse state
if [ "${ncrit}" -ge "${crit}" ]; then
	checkState=CRITICAL
elif [ "${ncrit}" -ge "${warn}" ]; then
	checkState=WARNING
fi

checkOutput="${ncrit} service(s) failed."
checkPerfdata="ncrit=${ncrit};${warn};${crit}"
checkDetails="${output}"
checkReturn
